/*
 * Copyright (c) 2018, Raqes <j.raqes@gmail.com>
 * Copyright (c) 2020, Charles <github.com/kthisiscvpv>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.runelite.client.plugins.socketspecialcounter;

import com.google.common.collect.Sets;
import java.util.Set;
import lombok.Getter;
import lombok.ToString;
import net.runelite.api.NpcID;

@Getter
@ToString
enum Boss
{

	// Wilderness

	CALLISTO(NpcID.CALLISTO, NpcID.CALLISTO_6609),
	CHAOS_ELEMENTAL(NpcID.CHAOS_ELEMENTAL, NpcID.CHAOS_ELEMENTAL_6505),
	CHAOS_FANATIC(NpcID.CHAOS_FANATIC),
	CRAZY_ARCHEOLOGIST(NpcID.CRAZY_ARCHAEOLOGIST),
	KING_BLACK_DRAGON(NpcID.KING_BLACK_DRAGON, NpcID.KING_BLACK_DRAGON_2642, NpcID.KING_BLACK_DRAGON_6502),
	SCORPIA(NpcID.SCORPIA),
	VENETENATIS(NpcID.VENENATIS, NpcID.VENENATIS_6610),
	VETION(NpcID.VETION, NpcID.VETION_REBORN),

	// God Wars Dungeon

	COMMANDER_ZILYANA(NpcID.COMMANDER_ZILYANA, NpcID.COMMANDER_ZILYANA_6493),
	GENERAL_GRAARDOR(NpcID.GENERAL_GRAARDOR, NpcID.GENERAL_GRAARDOR_6494),
	KRIL_TSUROTH(NpcID.KRIL_TSUTSAROTH, NpcID.KRIL_TSUTSAROTH_6495),
	KREEARRA(NpcID.KREEARRA, NpcID.KREEARRA_6492),

	// Theatre of Blood

	NYLOCAS_VASILIAS(NpcID.NYLOCAS_VASILIAS, NpcID.NYLOCAS_VASILIAS_8355, NpcID.NYLOCAS_VASILIAS_8356, NpcID.NYLOCAS_VASILIAS_8357),
	PESTILENT_BLOAT(NpcID.PESTILENT_BLOAT),
	SOTETSEG(NpcID.SOTETSEG_8388),
	XARPUS(NpcID.XARPUS, NpcID.XARPUS_8339, NpcID.XARPUS_8340, NpcID.XARPUS_8341),

	// Chambers of Xeric

	ICE_DEMON(NpcID.ICE_DEMON, NpcID.ICE_DEMON_7585),

	MUTTADILES(NpcID.MUTTADILE, NpcID.MUTTADILE_7562, NpcID.MUTTADILE_7563),
	OLM(NpcID.GREAT_OLM, NpcID.GREAT_OLM_7554, NpcID.GREAT_OLM_LEFT_CLAW, NpcID.GREAT_OLM_LEFT_CLAW_7555, NpcID.GREAT_OLM_RIGHT_CLAW, NpcID.GREAT_OLM_RIGHT_CLAW_7553),
	TEKTON(NpcID.TEKTON, NpcID.TEKTON_7541, NpcID.TEKTON_7542, NpcID.TEKTON_7545, NpcID.TEKTON_ENRAGED, NpcID.TEKTON_ENRAGED_7544),
	SKELETAL_MYSTICS(NpcID.SKELETAL_MYSTIC, NpcID.SKELETAL_MYSTIC_7605, NpcID.SKELETAL_MYSTIC_7606),
	VANGUARDS(NpcID.VANGUARD, NpcID.VANGUARD_7526, NpcID.VANGUARD_7527, NpcID.VANGUARD_7528, NpcID.VANGUARD_7529, NpcID.VANGUARD_8198, NpcID.VANGUARD_8203),
	VASA_NISTIRIO(NpcID.VASA_NISTIRIO, NpcID.VASA_NISTIRIO_7567),
	VESPULA(NpcID.VESPULA, NpcID.VESPULA_7531, NpcID.VESPULA_7532),

	// Miscellaneous

	ABYSSAL_SIRE(NpcID.ABYSSAL_SIRE, NpcID.ABYSSAL_SIRE_5887, NpcID.ABYSSAL_SIRE_5888, NpcID.ABYSSAL_SIRE_5889, NpcID.ABYSSAL_SIRE_5890, NpcID.ABYSSAL_SIRE_5891,
		NpcID.ABYSSAL_SIRE_5908),
	ALCHEMICAL_HYDRA(NpcID.ALCHEMICAL_HYDRA, NpcID.ALCHEMICAL_HYDRA_8616, NpcID.ALCHEMICAL_HYDRA_8617, NpcID.ALCHEMICAL_HYDRA_8618, NpcID.ALCHEMICAL_HYDRA_8619,
		NpcID.ALCHEMICAL_HYDRA_8620, NpcID.ALCHEMICAL_HYDRA_8621, NpcID.ALCHEMICAL_HYDRA_8622, NpcID.ALCHEMICAL_HYDRA_8634),
	BRYOPHYTA(NpcID.BRYOPHYTA),
	CERBERUS(NpcID.CERBERUS, NpcID.CERBERUS_5863, NpcID.CERBERUS_5866),
	CORPOREAL_BEAST(NpcID.CORPOREAL_BEAST),
	DAGANNOTH_PRIME(NpcID.DAGANNOTH_PRIME, NpcID.DAGANNOTH_PRIME_6497),
	DAGANNOTH_REX(NpcID.DAGANNOTH_REX, NpcID.DAGANNOTH_REX_6498),
	DAGANNOTH_SUPREME(NpcID.DAGANNOTH_SUPREME, NpcID.DAGANNOTH_SUPREME_6496),
	DAWN(NpcID.DAWN, NpcID.DAWN_7852, NpcID.DAWN_7853, NpcID.DAWN_7884, NpcID.DAWN_7885),
	DUSK(NpcID.DUSK, NpcID.DUSK_7851, NpcID.DUSK_7854, NpcID.DUSK_7855, NpcID.DUSK_7882, NpcID.DUSK_7883, NpcID.DUSK_7886, NpcID.DUSK_7887, NpcID.DUSK_7888,
		NpcID.DUSK_7889),
	GIANT_MOLE(NpcID.GIANT_MOLE, NpcID.GIANT_MOLE_6499),
	HESPORI(NpcID.HESPORI),
	KALPHITE_QUEEN(NpcID.KALPHITE_QUEEN, NpcID.KALPHITE_QUEEN_963, NpcID.KALPHITE_QUEEN_965, NpcID.KALPHITE_QUEEN_4303, NpcID.KALPHITE_QUEEN_4304,
		NpcID.KALPHITE_QUEEN_6500, NpcID.KALPHITE_QUEEN_6501),
	MIMIC(NpcID.THE_MIMIC, NpcID.THE_MIMIC_8633),
	NIGHTMARE(NpcID.THE_NIGHTMARE, NpcID.THE_NIGHTMARE_9426, NpcID.THE_NIGHTMARE_9427, NpcID.THE_NIGHTMARE_9428, NpcID.THE_NIGHTMARE_9429, NpcID.THE_NIGHTMARE_9430,
		NpcID.THE_NIGHTMARE_9431, NpcID.THE_NIGHTMARE_9432, NpcID.THE_NIGHTMARE_9433, NpcID.THE_NIGHTMARE_9460,
		NpcID.THE_NIGHTMARE_9461, NpcID.THE_NIGHTMARE_9462, NpcID.THE_NIGHTMARE_9463, NpcID.THE_NIGHTMARE_9464),
	OBOR(NpcID.OBOR),
	SARACHNIS(NpcID.SARACHNIS),
	VORKATH(NpcID.VORKATH, NpcID.VORKATH_8058, NpcID.VORKATH_8059, NpcID.VORKATH_8060, NpcID.VORKATH_8061);

	private final Set<Integer> ids;

	Boss(Integer... ids)
	{
		this.ids = Sets.newHashSet(ids);
	}

	static Boss getBoss(int id)
	{
		for (Boss boss : values())
		{
			if (boss.ids.contains(id))
			{
				return boss;
			}
		}
		return null;
	}
}